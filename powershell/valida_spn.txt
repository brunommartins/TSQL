function Get-SQLServiceAccount {
    param ($instancia)
    $serviceName = if ($instancia -eq "MSSQLSERVER") { "MSSQLSERVER" } else { "MSSQL$" + $instancia }
    $wmi = Get-WmiObject -Class Win32_Service -Filter "Name = '$serviceName'" -ErrorAction SilentlyContinue
    return $wmi?.StartName
}

function Get-SQLPort {
    param ($instanciaId)

    $tcpKeyPath = "HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server\$instanciaId\MSSQLServer\SuperSocketNetLib\Tcp\IPAll"
    $tcpPort = (Get-ItemProperty -Path $tcpKeyPath -ErrorAction SilentlyContinue).TcpPort
    return if ($tcpPort) { $tcpPort } else { "1433" }
}

# Coleta informações básicas
$SQLServerName = $env:COMPUTERNAME
$FQDN = [System.Net.Dns]::GetHostByName($SQLServerName).HostName
$instanciasSQL = @()
$regPath = "HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server"
$instanceMap = (Get-ItemProperty -Path "$regPath\Instance Names\SQL" -ErrorAction SilentlyContinue)

# Verifica se há instâncias
if (-not $instanceMap) {
    Write-Host "❌ Nenhuma instância SQL encontrada."
    exit
}

$instanceMap.PSObject.Properties | ForEach-Object {
    $nomeInstancia = $_.Name
    $instanciaId = $_.Value
    $isDefaultInstance = ($nomeInstancia -eq "MSSQLSERVER")
    $serviceAccount = Get-SQLServiceAccount -instancia $nomeInstancia
    $porta = Get-SQLPort -instanciaId $instanciaId

    if (-not $serviceAccount) { return }

    if ($serviceAccount -like "*LocalSystem" -or $serviceAccount -like "*LocalService" -or $serviceAccount -like "*NetworkService") {
        Write-Host "⚠️ Conta $serviceAccount é gerenciada pelo sistema. SPN não precisa ser registrado manualmente.`n"
        return
    }

    $spn1 = if ($isDefaultInstance) { "MSSQLSvc/$($SQLServerName):$porta" } else { "MSSQLSvc/$($SQLServerName)\$nomeInstancia" }
    $spn2 = if ($isDefaultInstance) { "MSSQLSvc/$($FQDN):$porta" } else { "MSSQLSvc/$($FQDN)\$nomeInstancia" }

    $spnsEsperados = @($spn1, $spn2)
    $spnsRegistrados = setspn -L $serviceAccount 2>$null

    Write-Host "`n🔍 Verificando SPNs para instância: $nomeInstancia (porta $porta)..."

    foreach ($spn in $spnsEsperados) {
        if ($spnsRegistrados -match [regex]::Escape($spn)) {
            Write-Host "✅ SPN existe: $spn"
        } else {
            Write-Warning "❌ SPN ausente: $spn"
            Write-Host "👉 Comando para registrar:"
            Write-Host "setspn -A $spn $serviceAccount"
        }
    }
}
